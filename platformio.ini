[platformio]
default_envs = flight_computer_2022

[env]
build_src_filter = +<*> -<devices/*> +<devices/${PIOENV}/*>
upload_protocol = stlink
debug_tool = stlink

[env:flight_computer_2022]
platform = ststm32@15.6.0
board = flight_computer
framework = arduino
lib_deps = 
    adafruit/Adafruit GPS Library
    sparkfun/SparkFun u-blox GNSS Arduino Library@^2.2.25
build_flags = -std=c++17 -fno-common -Wall -Wextra -D NDEBUG
    -D USBCON -D USBD_USE_CDC -D ADAFRUIT_GPS

[env:2024_bottom_bun]
platform = ststm32@15.6.0
board = flight_computer
framework = arduino
lib_deps =
    SPI
    Wire
build_flags = -std=c++17 -fno-common -Wall -Wextra -D NDEBUG
    -D USBCON -D USBD_USE_CDC

[env:2024_brain_rot]
platform = ststm32@15.6.0
board = flight_computer
framework = arduino
build_flags = -std=c++17 -fno-common -Wall -Wextra -D NDEBUG
    -D USBCON -D USBD_USE_CDC

[env:2024_megawatt]
platform = ststm32@15.6.0
board = flight_computer
framework = arduino
build_flags = -std=c++17 -fno-common -Wall -Wextra -D NDEBUG
    -D USBCON -D USBD_USE_CDC

[env:crash_and_burn]
platform = ststm32
board = crash_and_burn
framework = arduino
build_flags = -std=c++17 -fno-common -Wall -Wextra -D NDEBUG

[env:breakout]
board = flight_computer
build_flags = -std=c++17 -fno-common -Wall -Wextra -D NDEBUG
    -D USBCON -D USBD_USE_CDC

[env:native]
platform = native
test_build_src = true
test_ignore = test_flight
build_src_filter = +<util.cpp> +<kalman.cpp>
build_flags = -std=c++17 -Wall -Wextra -DNATIVE_TEST -g 